plugins {
    id 'application'
    id 'java'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

java { toolchain { languageVersion = JavaLanguageVersion.of(25) } }

dependencies {
    implementation libs.netty.transport
    implementation libs.netty.buffer
    implementation libs.netty.codec.http
    implementation libs.netty.handler
    implementation libs.jackson.core
    implementation libs.slf4j.api
    implementation libs.logback.classic
    implementation libs.snakeyaml
    implementation libs.lucene.core
    implementation libs.lucene.analysis.common
    implementation libs.lucene.query.parser
    compileOnly libs.lombok
    annotationProcessor libs.lombok

    testImplementation libs.junit.jupiter
    testImplementation libs.assertj.core
    testRuntimeOnly libs.logback.classic
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

application {
    mainClass = 'org.example.App'
}

jar {
    archiveBaseName = application_name
    archiveVersion = application_version
    manifest {
        attributes(
            'Main-Class': 'org.example.App'
        )
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}
